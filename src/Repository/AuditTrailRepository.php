<?php

namespace App\Repository;

use App\Entity\AdmissionEntity;

/**
 * AuditTrailRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AuditTrailRepository extends \Doctrine\ORM\EntityRepository
{

    public function ajax_list(array $get, $userData){

        $columns = array(
            array('DATE_FORMAT(au.`created_at`, "%m/%d/%Y %h:%i:%s %p")', 'DATE_FORMAT(au.`created_at`, "%m/%d/%Y %h:%i:%s %p")', 'createdAt'),
            array("CONCAT(u.`first_name`, ' ', u.`last_name`)", "CONCAT(u.`first_name`, ' ', u.`last_name`)", 'user'),
            array('au.`ref_table_label`', "au.`ref_table_label`", "label"),
            array('au.`id`', "au.`id`"),


        );
        $asColumns = array();

        $select = "SELECT";
        $from = "FROM `audit_trail` au";
        $sqlWhere = "";
        $joins = " LEFT JOIN `user` u ON u.`id` = au.`user_id`";
        
        $groupBy = "";
        $orderBy = "";
        $limit = "";
        $stmtParams = array();

        foreach($columns as $key => $column) {
            $select .= ($key > 0 ? ', ' : ' ') . $column[1] . (isset($column[2]) ? ' AS ' . $column[2] : '');
        }

        /*
         * Ordering
         */
        foreach($get['columns'] as $key => $column) {
            if($column['orderable']=='true') {
                if(isSet($get['order'])) {
                    foreach($get['order'] as $order) {
                        if($order['column']==$key) {
                            $orderBy .= (!empty($orderBy) ? ', ' : 'ORDER BY ') . $columns[$key][0] . (!empty($order['dir']) ? ' ' . $order['dir'] : '');
                        }
                    }
                }
            }
        }

        /*
         * Filtering
         */
        if(isset($get['search']) && $get['search']['value'] != ''){
            $aLikes = array();
            foreach($get['columns'] as $key => $column) {
                if($column['searchable']=='true') {
                    $aLikes[] = $columns[$key][0] . ' LIKE :searchValue';
                }
            }
            foreach($asColumns as $asColumn) {
                $aLikes[] = $asColumn . ' LIKE :searchValue';
            }
            if(count($aLikes)) {
                $sqlWhere .= (!empty($sqlWhere) ? ' AND ' : 'WHERE ') . '(' . implode(' OR ', $aLikes) . ')';
                $stmtParams['searchValue'] = "%" . $get['search']['value'] . "%";
            }
        }

        /* Set Limit and Length */
        if(isset( $get['start'] ) && $get['length'] != '-1'){
            $limit = 'LIMIT ' . (int)$get['start'] . ',' . (int)$get['length'];
        }

        $sql = "$select $from $joins $sqlWhere $groupBy $orderBy";
        $query = $this->getEntityManager()->getConnection()->prepare($sql);
     

        foreach($stmtParams as $k => $v){
            $query->bindValue($k, $v);

        }
        $res = $query->executeQuery();
        $result_count = $res->fetchAllAssociative();
        $sql = "$select $from $joins $sqlWhere $groupBy $orderBy $limit";
        $query = $this->getEntityManager()->getConnection()->prepare($sql);
        foreach($stmtParams as $k => $v){
            $query->bindValue($k, $v);

        }
        $res = $query->executeQuery();
        $result = $res->fetchAllAssociative();

        /* Data Count */
        $recordsTotal = count($result_count);

        /*
         * Output
         */
        $output = array(
            "draw" => intval($get['draw']),
            "recordsTotal" => $recordsTotal,
            "recordsFiltered" => $recordsTotal,
            "data" => array()
        );

        $url = $get['url'];
        $detailsUrl = '';
        $hasDetails = false;
      
        if($userData['type'] == 'Super Admin'  || in_array('Audit Trail Details', $userData['accesses'])){

            $detailsUrl = $url . 'audit_trail/details';  
            $hasDetails = true;
        }

        foreach($result as $row) {

            $id2 = base64_encode($row['id']);

            $action = $hasDetails ? "<a class='action-button-style btn btn-primary table-btn' href='$detailsUrl/$id2'>Update</a>" : "";

            $values = array(
                $row['createdAt'],
                $row['user'],
                $row['label'],
                $action,
            );

            $output['data'][] = $values;
        }

        unset($result);

        return $output;
    }


}
